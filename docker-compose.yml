services:
  postgres:
    image: postgres:13
    container_name: streaming-postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: streaming_content_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - streaming-network

  backend:
    build:
      context: ./backend
    container_name: streaming-backend
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=streaming_content_db
      - DB_SYNC=true
      - JWT_SECRET=streaming_secret_key
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "npm install && npm run start:dev"
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - streaming-network

  frontend:
    build:
      context: ./frontend
    container_name: streaming-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run dev"
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - streaming-network

volumes:
  postgres_data:

networks:
  streaming-network:
    driver: bridge
